import { RegisterMap } from '../register';
import { Metadata } from '../metadata';
/**
 * Generate the SVG representation of the qubit register wires in `registers` and the classical wires
 * stemming from each measurement gate.
 *
 * @param registers    Map from register IDs to register metadata.
 * @param measureGates Array of measurement gates metadata.
 * @param endX         End x coord.
 *
 * @returns SVG representation of register wires.
 */
declare const formatRegisters: (registers: RegisterMap, measureGates: Metadata[], endX: number) => SVGElement;
/**
 * Generates the SVG representation of a classical register.
 *
 * @param startX Start x coord.
 * @param gateY  y coord of measurement gate.
 * @param endX   End x coord.
 * @param wireY  y coord of wire.
 *
 * @returns SVG representation of the given classical register.
 */
declare const _classicalRegister: (startX: number, gateY: number, endX: number, wireY: number) => SVGElement;
/**
 * Generates the SVG representation of a qubit register.
 *
 * @param qId         Qubit register index.
 * @param endX        End x coord.
 * @param y           y coord of wire.
 * @param labelOffset y offset for wire label.
 *
 * @returns SVG representation of the given qubit register.
 */
declare const _qubitRegister: (qId: number, endX: number, y: number, labelOffset?: number) => SVGElement;
export { formatRegisters, _classicalRegister, _qubitRegister };
